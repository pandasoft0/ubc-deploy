{"version":3,"sources":["webpack:///./src/views/Chart.vue?019f","webpack:///src/views/Chart.vue","webpack:///./src/views/Chart.vue?54f3","webpack:///./src/views/Chart.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","chartType","class","active","on","toCandleStickChart","toLineChart","ref","attrs","interval","$event","updateTimeInterval","_e","staticRenderFns","name","data","chartData","chart","chartLoading","candleStickChartConfig","type","theme","dataDateFormat","mouseWheelZoomEnabled","pathToImages","categoryAxesSettings","minPeriod","dataSets","panels","chartScrollbarSettings","graph","graphType","usePeriod","chartCursorSettings","valueLineBalloonEnabled","valueLineEnabled","legendSettings","useMarkerColorForLabels","lineCartConfig","mounted","computed","components","methods","zoomChart","length","scrollbarChart","zoomToIndexes","fetchChartData","fetch","ti","dataSet","fieldMappings","push","fromField","toField","panel","stockGraphs","id","balloonText","closeField","fillColors","highField","lineColor","lineAlpha","lowField","fillAlphas","negativeFillColors","negativeLineColor","openField","valueField","proCandlesticks","useDataSetColors","stockLegend","valueTextRegular","validateNow","alert","lineThickness","showBalloon","periodValueTextRegular","showChart","window","AmCharts","makeChart","valueBalloonsEnabled","component"],"mappings":"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","file":"js/chunk-2d0c7773.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('div',{staticClass:\"info-card\"},[_c('span',[_c('h5',[_vm._v(\"Global Cryptocurrency Price\"+_vm._s(_vm.chartType))])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 align-items-center\"},[_c('div',{staticClass:\"row chart-bar\"},[_c('div',{staticClass:\"chart-type\"},[_c('button',{staticClass:\"btn btn-primary btn-sm mr-2\",class:[{ active: _vm.chartType === 'cs' }],on:{\"click\":_vm.toCandleStickChart}},[_vm._v(\" Candlestick Chart \")]),_c('button',{staticClass:\"btn btn-primary btn-sm\",class:[{ active: _vm.chartType === 'lc' }],on:{\"click\":_vm.toLineChart}},[_vm._v(\" Line Chart \")])])])]),_c('div',{ref:\"chartdiv\",staticClass:\"chart-panel col\",attrs:{\"id\":\"chartdiv\"}}),_c('div',{staticClass:\"col-12 p-2 text-right\"},[_c('button',{staticClass:\"btn btn-primary btn-sm mr-2\",class:[{ active: _vm.interval === '1h' }],on:{\"click\":function($event){return _vm.updateTimeInterval('1h')}}},[_vm._v(\" 1H \")]),_c('button',{staticClass:\"btn btn-primary btn-sm mr-2\",class:[{ active: _vm.interval === '1d' }],on:{\"click\":function($event){return _vm.updateTimeInterval('1d')}}},[_vm._v(\" 1D \")]),_c('button',{staticClass:\"btn btn-primary btn-sm mr-2\",class:[{ active: _vm.interval === '1w' }],on:{\"click\":function($event){return _vm.updateTimeInterval('1w')}}},[_vm._v(\" 1W \")]),_c('button',{staticClass:\"btn btn-primary btn-sm mr-2\",class:[{ active: _vm.interval === '1M' }],on:{\"click\":function($event){return _vm.updateTimeInterval('1M')}}},[_vm._v(\" 1M \")])])]),(_vm.chartLoading)?_c('div',{staticClass:\"spinner\"},[_c('div',{staticClass:\"circle-spinner\"})]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"\">\r\n    <div class=\"info-card\">\r\n      <span>\r\n          <h5>Global Cryptocurrency Price{{chartType}}</h5>\r\n      </span>  \r\n      <div class=\"row\">\r\n        <div class=\"col-12 align-items-center\">\r\n          <div class=\"row chart-bar\">\r\n            <div class=\"chart-type\">\r\n              <button\r\n                class=\"btn btn-primary btn-sm mr-2\"\r\n                :class=\"[{ active: chartType === 'cs' }]\"\r\n                @click=\"toCandleStickChart\"\r\n              >\r\n                Candlestick Chart\r\n              </button>\r\n              <button\r\n                class=\"btn btn-primary btn-sm\"\r\n                :class=\"[{ active: chartType === 'lc' }]\"\r\n                @click=\"toLineChart\"\r\n              >\r\n                Line Chart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"chart-panel col\" ref=\"chartdiv\" id=\"chartdiv\"></div>\r\n        <div class=\"col-12 p-2 text-right\">\r\n          <button\r\n            class=\"btn btn-primary btn-sm mr-2\"\r\n            :class=\"[{ active: interval === '1h' }]\"\r\n            @click=\"updateTimeInterval('1h')\"\r\n          >\r\n            1H\r\n          </button>\r\n          <button\r\n            class=\"btn btn-primary btn-sm mr-2\"\r\n            :class=\"[{ active: interval === '1d' }]\"\r\n            @click=\"updateTimeInterval('1d')\"\r\n          >\r\n            1D\r\n          </button>\r\n          <button\r\n            class=\"btn btn-primary btn-sm mr-2\"\r\n            :class=\"[{ active: interval === '1w' }]\"\r\n            @click=\"updateTimeInterval('1w')\"\r\n          >\r\n            1W\r\n          </button>\r\n          <button\r\n            class=\"btn btn-primary btn-sm mr-2\"\r\n            :class=\"[{ active: interval === '1M' }]\"\r\n            @click=\"updateTimeInterval('1M')\"\r\n          >\r\n            1M\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"spinner\" v-if=\"chartLoading\">\r\n        <div class=\"circle-spinner\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport \"amcharts3/amcharts/amcharts\";\r\n// eslint-disable-next-line\r\nimport \"amcharts3/amcharts/serial\";\r\n// eslint-disable-next-line\r\nimport \"amstock3/amcharts/amstock\";\r\nconst proxyUrl = 'localhost/proxyurl';\r\nexport default {\r\n  name: \"chart\",\r\n  data() {\r\n    return {\r\n      chartData: [],\r\n      chart: null,\r\n      interval: \"1d\",\r\n      chartLoading: true,\r\n      chartType: \"cs\",\r\n      candleStickChartConfig: {\r\n        type: \"stock\",\r\n        theme: \"light\",\r\n        dataDateFormat: \"YYYY-MM-DD HH\",\r\n        mouseWheelZoomEnabled: true,\r\n        pathToImages: \"http://cdn.amcharts.com/lib/3/images/\",\r\n        categoryAxesSettings: {\r\n          minPeriod: \"hh\",\r\n        },\r\n        dataSets: [\r\n          {\r\n            fieldMappings: [\r\n              {\r\n                fromField: \"open\",\r\n                toField: \"open\",\r\n              },\r\n              {\r\n                fromField: \"close\",\r\n                toField: \"close\",\r\n              },\r\n              {\r\n                fromField: \"high\",\r\n                toField: \"high\",\r\n              },\r\n              {\r\n                fromField: \"low\",\r\n                toField: \"low\",\r\n              },\r\n              {\r\n                fromField: \"volume\",\r\n                toField: \"volume\",\r\n              },\r\n            ],\r\n            color: \"#7f8da9\",\r\n            dataProvider: this.chartData,\r\n            title: this.symbol,\r\n            categoryField: \"date\",\r\n          },\r\n        ],\r\n        panels: [\r\n          {\r\n            title: \"Price\",\r\n            showCategoryAxis: true,\r\n            percentHeight: 70,\r\n            valueAxes: [\r\n              {\r\n                id: \"v1\",\r\n                dashLength: 5,\r\n              },\r\n            ],\r\n\r\n            categoryAxis: {\r\n              dashLength: 5,\r\n            },\r\n\r\n            stockGraphs: [\r\n              {\r\n                type: \"candlestick\",\r\n                id: \"g1\",\r\n                openField: \"open\",\r\n                closeField: \"close\",\r\n                highField: \"high\",\r\n                lowField: \"low\",\r\n                valueField: \"close\",\r\n                lineColor: \"#00a928\",\r\n                fillColors: \"#00a928\",\r\n                negativeLineColor: \"#db4c3c\",\r\n                negativeFillColors: \"#db4c3c\",\r\n                fillAlphas: 1,\r\n                useDataSetColors: false,\r\n                showBalloon: true,\r\n                useNegativeColorIfDown: false,\r\n                balloonText:\r\n                  \"Open:<b>[[open]]</b><br>Low:<b>[[low]]</b><br>High:<b>[[high]]</b><br>Close:<b>[[close]]</b>\",\r\n              },\r\n            ],\r\n\r\n            stockLegend: {\r\n              valueTextRegular: undefined,\r\n              periodValueTextComparing: \"[[percents.value.close]]%\",\r\n            },\r\n          },\r\n          {\r\n            title: \"Volume\",\r\n            percentHeight: 30,\r\n            marginTop: 1,\r\n            showCategoryAxis: true,\r\n            valueAxes: [\r\n              {\r\n                dashLength: 5,\r\n              },\r\n            ],\r\n            categoryAxis: {\r\n              dashLength: 5,\r\n            },\r\n\r\n            stockGraphs: [\r\n              {\r\n                valueField: \"volume\",\r\n                type: \"column\",\r\n                fillColors: \"#7f8da9\",\r\n                showBalloon: true,\r\n                fillAlphas: 1,\r\n              },\r\n            ],\r\n\r\n            stockLegend: {\r\n              markerType: \"none\",\r\n              markerSize: 0,\r\n              labelText: \"\",\r\n              periodValueTextRegular: \"[[value.close]]\",\r\n            },\r\n          },\r\n        ],\r\n        chartScrollbarSettings: {\r\n          graph: \"g1\",\r\n          graphType: \"line\",\r\n          usePeriod: \"DD\",\r\n        },\r\n        chartCursorSettings: {\r\n          valueLineBalloonEnabled: true,\r\n          valueLineEnabled: true,\r\n        },\r\n        legendSettings: {\r\n          useMarkerColorForLabels: true,\r\n        },\r\n      },\r\n      lineCartConfig: {\r\n        type: \"stock\",\r\n        theme: \"light\",\r\n        dataDateFormat: \"YYYY-MM-DD HH\",\r\n        mouseWheelZoomEnabled: true,\r\n        pathToImages: \"http://cdn.amcharts.com/lib/3/images/\",\r\n        categoryAxesSettings: {\r\n          minPeriod: \"hh\",\r\n        },\r\n        dataSets: [\r\n          {\r\n            color: \"#00a928\",\r\n            fieldMappings: [\r\n              {\r\n                fromField: \"value\",\r\n                toField: \"value\",\r\n              },\r\n            ],\r\n            dataProvider: this.chartData,\r\n            categoryField: \"date\",\r\n          },\r\n        ],\r\n        panels: [\r\n          {\r\n            showCategoryAxis: true,\r\n            title: \"Price\",\r\n            stockGraphs: [\r\n              {\r\n                id: \"g1\",\r\n                valueField: \"value\",\r\n                useDataSetColors: false,\r\n              },\r\n            ],\r\n            stockLegend: {\r\n              periodValueTextRegular: \"[[value.close]]\",\r\n            },\r\n          },\r\n          {\r\n            title: \"Volume\",\r\n            percentHeight: 30,\r\n            showCategoryAxis: true,\r\n            stockGraphs: [\r\n              {\r\n                valueField: \"volume\",\r\n                type: \"column\",\r\n                showBalloon: false,\r\n                fillAlphas: 1,\r\n              },\r\n            ],\r\n            stockLegend: {\r\n              periodValueTextRegular: \"[[value.close]]\",\r\n            },\r\n          },\r\n        ],\r\n        chartScrollbarSettings: {\r\n          graph: \"g1\",\r\n          graphType: \"line\",\r\n          usePeriod: \"DD\",\r\n        },\r\n        chartCursorSettings: {\r\n          valueLineBalloonEnabled: true,\r\n          valueLineEnabled: true,\r\n        },\r\n        legendSettings: {\r\n          useMarkerColorForLabels: true,\r\n        },\r\n      },\r\n    };\r\n  },\r\n  mounted() {},\r\n  computed: {},\r\n  components: {},\r\n  methods: {\r\n    zoomChart() {\r\n      if (this.chartData.length > 50) {\r\n        this.chart.scrollbarChart.zoomToIndexes(\r\n          this.chartData.length - 40,\r\n          this.chartData.length - 1\r\n        );\r\n      }\r\n    },\r\n    fetchChartData(isUpdate = false) {\r\n      this.chartLoading = true;\r\n      //proxyuUrl is done to avoid cross-origin error as it is directly called from javascript.\r\n      const apiurl = encodeURIComponent(\r\n        `https://api.binance.com/api/v1/klines?symbol=${this.symbol}&interval=${this.interval}`\r\n      );\r\n      fetch(`${proxyUrl}${apiurl}`)\r\n        .then(\r\n          function (response) {\r\n            if (response.status !== 200) {\r\n              console.log(\r\n                \"Looks like there was a problem. Status Code: \" +\r\n                  response.status\r\n              );\r\n              return;\r\n            }\r\n            response.json().then(\r\n              function (data) {\r\n                this.chartData = data.map((val) => {\r\n                  return {\r\n                    date: new Date(val[0]),\r\n                    open: parseFloat(val[1]),\r\n                    high: parseFloat(val[2]),\r\n                    low: parseFloat(val[3]),\r\n                    close: parseFloat(val[4]),\r\n                    volume: parseFloat(val[5]),\r\n                    value: parseFloat(val[4]),\r\n                  };\r\n                });\r\n                if (isUpdate) {\r\n                  this.chart.dataSets[0].dataProvider = this.chartData;\r\n                  this.chart.validateData();\r\n                } else {\r\n                  this.showChart();\r\n                }\r\n                this.chartLoading = false;\r\n                this.zoomChart();\r\n              }.bind(this)\r\n            );\r\n          }.bind(this)\r\n        )\r\n        .catch(function (err) {\r\n          this.chartLoading = false;\r\n          console.log(\"Fetch Error :-S\", err);\r\n        });\r\n    },\r\n    updateTimeInterval(ti) {\r\n      this.interval = ti;\r\n      this.fetchChartData(true);\r\n    },\r\n    toCandleStickChart() {\r\n      this.chartType = \"cs\";\r\n      const dataSet = this.chart.dataSets[0];\r\n      const panel = this.chart.panels[0];\r\n      dataSet.fieldMappings = [];\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"close\",\r\n        toField: \"close\",\r\n      });\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"open\",\r\n        toField: \"open\",\r\n      });\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"high\",\r\n        toField: \"high\",\r\n      });\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"low\",\r\n        toField: \"low\",\r\n      });\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"volume\",\r\n        toField: \"volume\",\r\n      });\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"value\",\r\n        toField: \"value\",\r\n      });\r\n      panel.stockGraphs[0] = {\r\n        id: \"g1\",\r\n        type: \"candlestick\",\r\n        balloonText:\r\n          \"Open:<b>[[open]]</b><br>Low:<b>[[low]]</b><br>High:<b>[[high]]</b><br>Close:<b>[[close]]</b>\",\r\n        closeField: \"close\",\r\n        fillColors: \"#00a928\",\r\n        highField: \"high\",\r\n        lineColor: \"#00a928\",\r\n        lineAlpha: 1,\r\n        lowField: \"low\",\r\n        fillAlphas: 1,\r\n        negativeFillColors: \"#db4c3c\",\r\n        negativeLineColor: \"#db4c3c\",\r\n        openField: \"open\",\r\n        valueField: \"value\",\r\n        proCandlesticks: false,\r\n        useDataSetColors: false,\r\n      };\r\n      panel.stockLegend.valueTextRegular = \"[[close]] \";\r\n      this.chart.validateNow();\r\n    },\r\n    toLineChart() {\r\n      alert(this.chart.dataSets);\r\n      this.chartType = \"lc\";\r\n      const dataSet = this.chart.dataSets[0];\r\n      const panel = this.chart.panels[0];\r\n      dataSet.fieldMappings = [];\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"value\",\r\n        toField: \"value\",\r\n      });\r\n      dataSet.fieldMappings.push({\r\n        fromField: \"volume\",\r\n        toField: \"volume\",\r\n      });\r\n      panel.stockGraphs[0] = {\r\n        id: \"g1\",\r\n        type: \"line\",\r\n        valueField: \"value\",\r\n        lineThickness: 1,\r\n        useDataSetColors: false,\r\n        lineColor: \"#00a928\",\r\n        showBalloon: true,\r\n        balloonText: \"<b>[[value]]</b>\",\r\n      };\r\n      panel.stockLegend.periodValueTextRegular = \"[[value.close]] \";\r\n      this.chart.validateNow();\r\n    },\r\n    showChart() {\r\n      this.chart = window.AmCharts.makeChart(\"chartdiv\", {\r\n        type: \"stock\",\r\n        theme: \"light\",\r\n        dataDateFormat: \"YYYY-MM-DD HH\",\r\n        mouseWheelZoomEnabled: true,\r\n        pathToImages: \"http://cdn.amcharts.com/lib/3/images/\",\r\n        categoryAxesSettings: {\r\n          minPeriod: \"hh\",\r\n        },\r\n        dataSets: [\r\n          {\r\n            fieldMappings: [\r\n              {\r\n                fromField: \"open\",\r\n                toField: \"open\",\r\n              },\r\n              {\r\n                fromField: \"close\",\r\n                toField: \"close\",\r\n              },\r\n              {\r\n                fromField: \"high\",\r\n                toField: \"high\",\r\n              },\r\n              {\r\n                fromField: \"low\",\r\n                toField: \"low\",\r\n              },\r\n              {\r\n                fromField: \"volume\",\r\n                toField: \"volume\",\r\n              },\r\n              {\r\n                fromField: \"value\",\r\n                toField: \"value\",\r\n              },\r\n            ],\r\n            color: \"#7f8da9\",\r\n            dataProvider: this.chartData,\r\n            title: this.symbol,\r\n            categoryField: \"date\",\r\n          },\r\n        ],\r\n        panels: [\r\n          {\r\n            title: \"Price\",\r\n            showCategoryAxis: true,\r\n            percentHeight: 70,\r\n            valueAxes: [\r\n              {\r\n                id: \"v1\",\r\n                dashLength: 5,\r\n              },\r\n            ],\r\n\r\n            categoryAxis: {\r\n              dashLength: 5,\r\n              parseDates: true,\r\n            },\r\n\r\n            stockGraphs: [\r\n              {\r\n                type: \"candlestick\",\r\n                id: \"g1\",\r\n                openField: \"open\",\r\n                closeField: \"close\",\r\n                highField: \"high\",\r\n                lowField: \"low\",\r\n                valueField: \"close\",\r\n                lineColor: \"#00a928\",\r\n                fillColors: \"#00a928\",\r\n                negativeLineColor: \"#db4c3c\",\r\n                negativeFillColors: \"#db4c3c\",\r\n                fillAlphas: 1,\r\n                useDataSetColors: false,\r\n                showBalloon: true,\r\n                useNegativeColorIfDown: false,\r\n                balloonText:\r\n                  \"Open:<b>[[open]]</b><br>Low:<b>[[low]]</b><br>High:<b>[[high]]</b><br>Close:<b>[[close]]</b>\",\r\n              },\r\n            ],\r\n\r\n            stockLegend: {\r\n              valueTextRegular: undefined,\r\n              periodValueTextComparing: \"[[percents.value.close]]%\",\r\n            },\r\n          },\r\n          {\r\n            title: \"Volume\",\r\n            percentHeight: 30,\r\n            marginTop: 1,\r\n            showCategoryAxis: true,\r\n            valueAxes: [\r\n              {\r\n                dashLength: 5,\r\n              },\r\n            ],\r\n            categoryAxis: {\r\n              dashLength: 5,\r\n            },\r\n\r\n            stockGraphs: [\r\n              {\r\n                valueField: \"volume\",\r\n                type: \"column\",\r\n                fillColors: \"#7f8da9\",\r\n                showBalloon: true,\r\n                fillAlphas: 1,\r\n              },\r\n            ],\r\n\r\n            stockLegend: {\r\n              markerType: \"none\",\r\n              markerSize: 0,\r\n              labelText: \"\",\r\n              periodValueTextRegular: \"[[value.close]]\",\r\n            },\r\n          },\r\n        ],\r\n        chartScrollbarSettings: {\r\n          graph: \"g1\",\r\n          graphType: \"line\",\r\n          usePeriod: \"DD\",\r\n        },\r\n        chartCursorSettings: {\r\n          valueBalloonsEnabled: true,\r\n          valueLineBalloonEnabled: true,\r\n          valueLineEnabled: true,\r\n        },\r\n        legendSettings: {\r\n          useMarkerColorForLabels: true,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chart.vue?vue&type=template&id=64b2c2a7&\"\nimport script from \"./Chart.vue?vue&type=script&lang=js&\"\nexport * from \"./Chart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}